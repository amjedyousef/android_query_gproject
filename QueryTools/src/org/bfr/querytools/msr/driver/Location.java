/**
	Copyright 2014 [BFR]
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	    http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
**/
package org.bfr.querytools.msr.driver;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.5
//
// Date Of Creation: 4/16/2014 12:56:58 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class Location implements KvmSerializable
{

	public double latitude;
	public double longitude;

	public Location()
	{
	}

	public Location(SoapObject soapObject)
	{
		if (soapObject == null)
			return;
		if (soapObject.hasProperty("Latitude"))
		{
			Object obj = soapObject.getProperty("Latitude");
			if (obj != null && obj.getClass().equals(SoapPrimitive.class))
			{
				SoapPrimitive j = (SoapPrimitive) obj;
				latitude = Double.parseDouble(j.toString());
			} else if (obj != null && obj instanceof Number)
			{
				latitude = (Double) obj;
			}
		}
		if (soapObject.hasProperty("Longitude"))
		{
			Object obj = soapObject.getProperty("Longitude");
			if (obj != null && obj.getClass().equals(SoapPrimitive.class))
			{
				SoapPrimitive j = (SoapPrimitive) obj;
				longitude = Double.parseDouble(j.toString());
			} else if (obj != null && obj instanceof Number)
			{
				longitude = (Double) obj;
			}
		}
	}

	@Override
	public Object getProperty(int arg0)
	{
		switch (arg0)
		{
		case 0:
			return latitude;
		case 1:
			return longitude;
		}
		return null;
	}

	@Override
	public int getPropertyCount()
	{
		return 2;
	}

	@Override
	public void getPropertyInfo(int index,
			@SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
	{
		switch (index)
		{
		case 0:
			info.type = Double.class;
			info.name = "Latitude";
			break;
		case 1:
			info.type = Double.class;
			info.name = "Longitude";
			break;
		}
	}

	@Override
	public void setProperty(int arg0, Object arg1)
	{
	}

}
